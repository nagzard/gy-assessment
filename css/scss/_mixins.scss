// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
    #{$context} & {
        @content;
    }
}

//create media queries
@mixin responsive($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
            @content;
        }
    }

    @if str-slice($breakpoint, 0, 1) == ">" and map-has-key($breakpoints, str-slice($breakpoint, 2, -1)) {
        @media (min-width: #{map-get($breakpoints, str-slice($breakpoint, 2, -1))}) {
            @content;
        }
    }

    @if str-slice($breakpoint, 0, 1) == "<" and map-has-key($breakpoints, str-slice($breakpoint, 2, -1)) {
        @media (max-width: #{map-get($breakpoints, str-slice($breakpoint, 2, -1)) - 1px} ) {
            @content;
        }
    }
}

@mixin on-hover {
    @media (hover: hover) and (pointer: fine) {
        &:hover {
            @content;
        }
    }
}

@mixin touch {
	@media (pointer:coarse) {
		@content;
	}
}

@mixin no-touch {
	@media (hover: hover) and (pointer: fine) {
		@content;
	}
}

@mixin on-active {
    &:active {
        @content;
    }
}

@mixin noMotion {
    @media (prefers-reduced-motion) {
        @content;
    }
}

//fonts
// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: woff2 woff) {
    $src: null;

    $extmods: ( eot: "?", svg: "#" + str-replace($name, " ", "_") );

    $formats: ( otf: "opentype", ttf: "truetype" );

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-display: swap;
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}

@mixin listReset() {
    list-style: none;
    margin: 0;

    li {
        padding-left: 0;
        &:before {
            display: none;
        }
    }
}

@mixin arrow($dimension, $color, $position) {
    border-style: solid;
    #{$position}: calc(-1*#{$dimension});
    content: '';
    left: 50%;
    margin-left: calc(-1*#{$dimension});
    position: absolute;
    width: 0;
    height: 0;

    @if $position == top {
        border-color: transparent transparent $color transparent;
        border-width: 0 $dimension $dimension $dimension;
    }
    @else {
        border-color: $color transparent transparent transparent;
        border-width: $dimension $dimension 0 $dimension;
    }
}

@mixin scrollbar {
    scroll-behavior: smooth;
    overflow: auto;
    scrollbar-color: darken($white, 30%) transparent;
    scrollbar-width: thin;
    -webkit-overflow-scrolling: touch;

    &::-webkit-scrollbar {
        width: 4px;
        height: 4px;
    }

    &::-webkit-scrollbar-thumb {
        background: darken($white, 30%);
        border-radius: 13px;
    }

    &::-webkit-scrollbar-thumb:hover {
        background: darken($white, 40%);
    }

    &::-webkit-scrollbar-thumb:active {
        background: darken($white, 50%);
    }

    &::-webkit-scrollbar-track {
        background: transparent;
    }
}

@mixin minus {
	width: 24px;
	height: 24px;

	&:before,
	&:after {
		background-color: lighten($black, 20%);
		content: '';
		position: absolute;
		left: 50%;
		top: 50%;
	}

	&:before {
		transform: translate(-50%, -50%);
		width: 16px;
		height: 2px;
	}

	&:after {
		transform: scaleY(0) translate(-50%, -50%);
		transition: transform 200ms ease-out;
		transform-origin: top;
		width: 2px;
		height: 16px;
	}
}

@mixin minusToPlus {
	transform: scaleY(1) translate(-50%, -50%);
}

@mixin imageRatio($width, $height) {
	padding-top: calc(#{$height} / #{$width} * 100%);
	position: relative;
	width: 100%;

	picture {
		left: 0;
		position: absolute;
		top: 0;
		width: 100%;
		height: 100%;
	}

	img {
		display: inline-block;
		vertical-align: top;
		width: 100%;
	}
}
